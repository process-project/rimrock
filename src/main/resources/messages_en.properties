
agh.homepage = http://www.agh.edu.pl/en
agh.name     = AGH

contact.address        = Gramatyka str. 8a room 414,<br/> +48 617 43 41,<br/> 30-071 Cracow, Poland.
contact.bunker         = Our bunker
contact.title          = Contact
contact.email          = rimrock@plgrid.pl

contact_us.description = If you have any problem with rimrock please let us know!
contact_us.title       = Contact us

cyfronet.homepage = http://www.cyfronet.krakow.pl/en
cyfronet.name     = Cyfronet

dice.about.credo = We participate in numerous national and international interdisciplinary research projects, where we seek the synergy between the academia and industry.
dice.about.title = About DICE team
dice.homepage    = http://dice.cyfronet.pl
dice.name        = Dice team

example.code              = Code
example.data_params       = Data params
example.data_params.none  = None
example.error             = Error response
example.example           = Example
example.json              = JSON
example.method            = Method
example.notes             = Notes
example.notes.none        = None
example.sample            = Sample call
example.sample_call.title = Bash (with base64, tr and curl)
example.success           = Success response
example.title             = Title
example.url               = URL
example.url_params        = URL params
example.url_params.none   = None
example.header_params     = Header params

iprocess.input.data_params       = {\n  "standard_input": [string (required)]\n}
iprocess.input.title             = Feed new input to interactive process
iprocess.start.data_params       = {\n  "host": [string (required)],\n  "command": [string (required)]\n  "tag": [string (optional)]\n}
iprocess.start.title             = Start new interactive process
iprocess.status.param.process_id = Process identifier (required)
iprocess.status.title            = Get interactive process status
iprocess.statuses.title          = Get status of all interactive processes
iprocesses.statuses.param.tag    = Tag value (optional)

iprocesses.description = Manages execution of an interactive process by fetching output and feeding input via subsequent REST calls.
iprocesses.long_title  = Interactive command execution
iprocesses.title       = IProcesses

jobs.abort.title                    = Abort job
jobs.delete.data_params             = None
jobs.delete.job_id                  = Job identifier
jobs.delete.notes                   = None
jobs.delete.title                   = Delete job
jobs.description                    = Allows for easy job management via a REST interface. User is able to start, monitor, get the results and delete running or finished jobs.
jobs.get.data_params                = None
jobs.get.job_id                     = Job identifier
jobs.get.notes                      = None
jobs.get.title                      = Get job info
jobs.get_all.data_params            = None
jobs.get_all.notes                  = None
jobs.get_all.title                  = Get information about all jobs
jobs.get_all.url_params             = None
jobs.long_title                     = Job submitter
jobs.post.data_params               = {\n  "host": [string (required)],\n  "working_directory": [string (optional)],\n  "script": [string (required)]\n  "tag": [string (optional)]\n}
jobs.post.notes                     = None
jobs.post.title                     = Submit new job
jobs.post.working_directory.warning = <strong>Warning!</strong> By default <tt>working_directory</tt> is set to user home directory. As a consequence when two or more jobs are started with default <tt>working_directory</tt> value at the same time then job script may be overwritten.
jobs.put.action_params              = {\n  "action": [string (required)]\n}
jobs.title                          = Jobs
jobs.statuses.param.tag             = Tag value (optional)

links = Our links

processes.description         = Executes a single command on a remote machine and returns its exit code and standard output. The execution time is limited to 10000 ms.
processes.example.data_params = {\n  "host": [string (required)],\n  "command": [string (required)]\n}
processes.example.notes       = None
processes.example.title       = Execute command
processes.example.url_params  = None
processes.long_title          = Basic command execution
processes.title               = Processes

proxyinfo.about = <strong>Security note!</strong> All the methods described below are secured. Authentication requires sending a user proxy certificate (support for SimpleCA signed proxies only) through a request header with the <code>PROXY</code> name and a Base64 encoded proxy as the value.

rimrock.description = Rimrock application simplify the way how you can interact with the remote servers. It allows to execute application in batch mode or start interactive application, where application output can be fetched online and new input can be send using simple REST interface. What is more by using dedicated REST interface you will be able to start new job on the infrastructure. You don't need to care about the way how to create correct job description using JDI (Job description language) - just pass the command you want to execute and we will do the rest.
rimrock.long_name   = Robust Remote Process Controller
rimrock.name        = rimrock

team.dh.bio = I am a graduate of Computer Science major at the University of Science and Technology in Krakow. At Cyfronet, I participate in various national and European research initiatives focusing on the usability of large computation and storage infrastructures. My area of interest includes web development, dynamic languages and remote desktop utilisation.
team.mk.bio = I graduated from the University of Science and Technology in Krak\u00f3w, Poland, where I received my M.Sc. in Computer Science. In the 2005 I joined Technologies Group in Research and development department in ComArch (2005-2010) where I was responsible for designing and developing solutions for telecommunication management and meta-modeling. In 2006 I have joined DICE team where I have been involved in the EU-funded projects. My current work addresses areas such as distributed resource discovery, distributed cloud based application design and implementation.
team.mp.bio = M.Sc. in Applied Computer Science from University of Science and Technology. I'm a Scientific Programmer at ACC Cyfronet AGH, where I'm involved in European and national research projects, my main areas of interest are: data and knowledge provenance study, cloud infrastructure, multiscale applications, grid middleware interoperability, workflow engines and analysis.
team.title  = Team

footer.version = Version:

gridjobs.title = Grid jobs
gridjobs.long_title = Grid job submitter
gridjobs.description = Allows for easy grid job management via a REST interface. User is able to start, monitor, get results and delete running or finished grid jobs.
gridjobs.extend.title = Extend proxy with VO
gridjobs.extend.vo = Virtual organization name
gridjobs.extend.data_params = None
gridjobs.extend.notes = None
gridjobs.submit.title = New job
gridjobs.submit.body.content.type = application/x-www-form-urlencoded or multipart/form-data
gridjobs.submit.data_params = executable=[string (required)]\narguments=[string[] (optional)]\nstdOutput=[string (optional)]\nstdError=[string (optional)]\ncandidateHosts=[string[] (optional)]\noutputSandbox=[string[] (optional)]\nfiles=[file[] (optional; all submitted files are automatically added to inputSandbox)]\ntag=[string (optional)]
gridjobs.submit.notes = Currently it is not possible to use proxy retrieved from the PL-Grid portal and extended with a virtual organization using rimrock. Proxy generated with the voms-proxy-init command should be used.
gridjobs.get_all.title = Fetch jobs
gridjobs.get_all.param.tag = Tag (optional)
gridjobs.get_all.data_params = None
gridjobs.get_all.notes = None
gridjobs.get.title = Job details
gridjobs.get.job_id = Job identifier
gridjobs.get.notes = None
gridjobs.delete.title = Delete job
gridjobs.delete.job_id = Job identifier
gridjobs.delete.data_params = None
gridjobs.delete.notes = None
gridjobs.abort.title = Cancel job
gridjobs.put.action_params = {\n  "action": [string (required)]\n}
gridjobs.jdl.title = Fetch JDL
gridjobs.jdl.job_id = Job identifier
gridjobs.jdl.data_params = None
gridjobs.files.title = Fetch files
gridjobs.files.job_id = Job identifier
gridjobs.files.file_name = File path relative to sandbox
gridjobs.files.data_params = None
gridjobs.files.file_contents = File contents

error.page.message = Unexpected error occurred. You can report the problem by using the email address in the footer or you can go to the main page.
error.page.go.to.main.label = Return to the main page